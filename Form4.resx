<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iQgNhCEICP/Z
</value>
  </data>
</root>